{"version":3,"sources":["./src/app/ffufm-feedback-dashboard-features/overview/overview.component.css","./src/app/ffufm-feedback-dashboard-features/overview/overview.component.html","./src/app/ffufm-feedback-dashboard-features/overview/overview.component.ts","./src/app/ffufm-feedback-dashboard-features/overview/overview.module.ts","./src/app/ffufm-feedback-dashboard-features/overview/overview.routing.ts"],"names":[],"mappings":"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","file":"overview.module.chunk.js","sourcesContent":["module.exports = \".chip > label {\\n    background-color: #7f7e80;\\n    border-radius: 5px;\\n    padding: 5px;\\n    color: #ffffff;\\n}\\n\\n.chip {\\n    display: inline;\\n}\\n\\n.chip > label > span {\\n    color: white;\\n}\\n\\n.selected-user-container {\\n    height: 50px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ffufm-feedback-dashboard-features/overview/overview.component.css\n// module id = ./src/app/ffufm-feedback-dashboard-features/overview/overview.component.css\n// module chunks = overview.module","module.exports = \"<!--overview component-->\\n\\n<div class=\\\"container\\\" style=\\\"text-align: center\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <h1> PROJECT MANAGER </h1>\\n      <div class=\\\"form-inline\\\">\\n        start date: <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"projectManagerStartDate\\\"\\n                           (input)=\\\"loadProjectManagerChart()\\\"><span style=\\\"visibility: hidden\\\">space</span>\\n        end date: <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"projectManagerEndDate\\\"\\n                         (input)=\\\"loadProjectManagerChart()\\\">\\n        <div class=\\\"btn-group\\\" dropdown>\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"toggleAllProjectManagers()\\\">toggle all</button>\\n          <button dropdownToggle type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\"><span class=\\\"caret\\\"></span>\\n          </button>\\n          <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n            <ng-container *ngFor=\\\"let pm of projectManagers\\\">\\n              <li role=\\\"menuitem\\\">\\n\\n                <ng-container *ngIf=\\\"pm.selected === false\\\">\\n                  <a class=\\\"dropdown-item\\\" (click)=\\\"toggleProjectManager(pm.id)\\\">{{\\n                    pm.displayName }}</a>\\n                </ng-container>\\n\\n              </li>\\n            </ng-container>\\n          </ul>\\n        </div>\\n      </div>\\n      <div class=\\\"container-fluid\\\">\\n        <ngx-charts-bar-vertical [results]=\\\"projectManagersAccumulatedAnswersByQuestion\\\"\\n                                 [legend]=\\\"showLegend\\\"></ngx-charts-bar-vertical>\\n      </div>\\n      <span *ngFor=\\\"let pm of projectManagers\\\">\\n        <ng-container *ngIf=\\\"pm.selected === true\\\">\\n          <div class=\\\"chip\\\">\\n            <label>{{ pm.displayName }}\\n              <span (click)=\\\"toggleProjectManager(pm.id)\\\">✖</span>\\n            </label>\\n          </div>\\n        </ng-container>\\n      </span>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <!-- TL -->\\n      <h1> TEAM LEAD </h1>\\n      <div class=\\\"form-inline\\\">\\n\\n        start date: <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"teamStartDate\\\"\\n                           (input)=\\\"loadTeamChart()\\\"><span style=\\\"visibility: hidden\\\">space</span>\\n        end date: <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"teamEndDate\\\"\\n                         (input)=\\\"loadTeamChart()\\\">\\n        <div class=\\\"btn-group\\\" dropdown>\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"toggleAllTeams()\\\">toggle all</button>\\n          <button dropdownToggle type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\"><span class=\\\"caret\\\"></span>\\n          </button>\\n          <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n            <ng-container *ngFor=\\\"let team of teams\\\">\\n              <li role=\\\"menuitem\\\">\\n\\n                <ng-container *ngIf=\\\"team.selected === false\\\">\\n                  <a class=\\\"dropdown-item\\\" (click)=\\\"toggleTeam(team.id)\\\">{{\\n                    team.displayName }}</a>\\n                </ng-container>\\n\\n              </li>\\n            </ng-container>\\n          </ul>\\n        </div>\\n      </div>\\n      <div class=\\\"container-fluid\\\">\\n        <ngx-charts-bar-vertical [results]=\\\"teamsAccumulatedAnswersByQuestion\\\"\\n                                 [legend]=\\\"showLegend\\\"></ngx-charts-bar-vertical>\\n      </div>\\n      <span *ngFor=\\\"let team of teams\\\">\\n        <ng-container *ngIf=\\\"team.selected === true\\\">\\n          <div class=\\\"chip\\\">\\n          <label>{{ team.displayName }}\\n            <span (click)=\\\"toggleTeam(team.id)\\\">✖</span>\\n          </label>\\n          </div>\\n        </ng-container>\\n      </span>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ffufm-feedback-dashboard-features/overview/overview.component.html\n// module id = ./src/app/ffufm-feedback-dashboard-features/overview/overview.component.html\n// module chunks = overview.module","import { ActivatedRoute } from '@angular/router';\nimport { Answer } from '@app/shared/models/answer.model';\nimport { AnswerService } from '@app/core/services';\nimport { AnswerStore, ProjectStore, QuestionStore, UserStore } from '@app/core/stores';\nimport { Component, OnInit } from '@angular/core';\nimport { Project } from '@app/shared/models/project.model';\nimport { Question } from '@app/shared/models/question.model';\nimport { User } from '@app/shared/models/user.model';\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'ffufm-feedback-dashboard-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.css']\n})\nexport class OverviewComponent implements OnInit {\n\n  answers: Answer[];\n  answersByProjectManager: Answer[];\n  answersByTeam: Answer[];\n  answer_content: string;\n  answer_project_id: string;\n  answer_question_id: string;\n  projects: Project[];\n  projectsByTeam: Project[];\n  projectsByProjectManager: Project[];\n  projectManagers: any[];\n  projectManagerStartDate = moment(Date.now()).format('YYYY-MM-DD');\n  projectManagerEndDate = moment(Date.now()).format('YYYY-MM-DD');\n  projectManagersAccumulatedAnswersByQuestion = [];\n  projectManagersAnswersByQuestionAndProject = {};\n  questions: Question[];\n  showLegend = 'true';\n  teams: any[];\n  teamStartWeek: any;\n  teamEndWeek: any;\n  teamStartDate = moment(Date.now()).format('YYYY-MM-DD');\n  teamEndDate = moment(Date.now()).format('YYYY-MM-DD');\n  teamsAnswersByQuestionAndProject = {};\n  teamsAccumulatedAnswersByQuestion = [];\n  users: any[];\n\n  constructor(private route: ActivatedRoute,\n              private projectStore: ProjectStore,\n              private answerStore: AnswerStore,\n              private userStore: UserStore,\n              private questionStore: QuestionStore,\n              private answerService: AnswerService) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n    });\n    this.getUsers();\n    this.getProjects();\n    this.getQuestions();\n    this.loadProjectManagers();\n    this.loadProjectManagerChart();\n\n    this.loadTeams();\n    this.loadTeamChart();\n\n  }\n\n  convertWeekToTeamStartDate() {\n    this.teamStartDate = moment().isoWeek(this.teamStartWeek).format('YYYY-MM-DD');\n  }\n\n  convertWeekToTeamEndDate() {\n    this.teamEndDate = moment().isoWeek(this.teamEndWeek).format('YYYY-MM-DD');\n  }\n\n  toggleTeam(userId) {\n    this.teams.forEach((team) => {\n      if (team.id === userId) {\n        if (team.selected === true) {\n          team.selected = false;\n        } else {\n          team.selected = true;\n        }\n      }\n    });\n    this.loadTeamChart();\n  }\n\n  toggleAllTeams() {\n    this.teams.forEach((team) => {\n      if (team.selected === true) {\n        team.selected = false;\n      } else {\n        team.selected = true;\n      }\n    });\n    this.loadProjectManagerChart();\n  }\n\n  toggleProjectManager(userId) {\n    this.projectManagers.forEach((pm) => {\n      if (pm.id === userId) {\n        if (pm.selected === true) {\n          pm.selected = false;\n        } else {\n          pm.selected = true;\n        }\n      }\n    });\n    this.loadProjectManagerChart();\n  }\n\n  toggleAllProjectManagers() {\n    this.projectManagers.forEach((pm) => {\n      if (pm.selected === true) {\n        pm.selected = false;\n      } else {\n        pm.selected = true;\n      }\n    });\n    this.loadProjectManagerChart();\n  }\n\n  loadTeamChart() {\n    this.getProjectsByTeam();\n    this.getAnswersByTeam();\n    this.teamsSortAnswersByQuestionAndProject();\n    this.loadTeamsAccumulatedAnswers();\n    console.log(this.teamsAccumulatedAnswersByQuestion);\n  }\n\n  loadProjectManagerChart() {\n    this.getProjectsByProjectManager();\n    this.getAnswersByProjectManager();\n    this.projectManagersSortAnswersByQuestionAndProject();\n    this.loadProjectManagersAccumulatedAnswers();\n    console.log(this.projectManagersAnswersByQuestionAndProject);\n  \tconsole.log(this.projectManagersAccumulatedAnswersByQuestion);\n  }\n\n  teamsSortAnswersByQuestionAndProject() {\n    this.teamsAnswersByQuestionAndProject = _.mapValues(_.groupBy(this.answersByTeam, 'question_id'),\n      clist => clist.map(question => _.omit(question, 'question_id')));\n  }\n\n  projectManagersSortAnswersByQuestionAndProject() {\n    this.projectManagersAnswersByQuestionAndProject = _.mapValues(_.groupBy(this.answersByProjectManager, 'question_id'),\n      clist => clist.map(question => _.omit(question, 'question_id')));\n  }\n\n  loadTeamsAccumulatedAnswers() {\n    this.teamsAccumulatedAnswersByQuestion = [];\n    Object.keys(this.teamsAnswersByQuestionAndProject).forEach((key) => {\n      let accumulatedAnswer = 0;\n      this.teamsAnswersByQuestionAndProject[key].forEach((answer) => {\n        accumulatedAnswer += Number(answer.content);\n      });\n\n      this.questions.forEach((question) => {\n        if (question.role_id == 0 || question.role_id == 1) {\n          if (question.id === key) {\n            this.teamsAccumulatedAnswersByQuestion.push({\n              name: question.content,\n              value: accumulatedAnswer\n            });\n          }\n        }\n      });\n    });\n  }\n\n  loadProjectManagersAccumulatedAnswers() {\n    this.projectManagersAccumulatedAnswersByQuestion = [];\n    Object.keys(this.projectManagersAnswersByQuestionAndProject).forEach((key) => {\n      let accumulatedAnswer = 0;\n      let divider = 0;\n      this.projectManagersAnswersByQuestionAndProject[key].forEach((answer) => {\n        accumulatedAnswer += Number(answer.content);\n        divider += 1;\n      });\n\n      this.questions.forEach((question) => {\n        if (question.role_id == 0 || question.role_id == 2) {\n          if (question.id === key) {\n            this.projectManagersAccumulatedAnswersByQuestion.push({\n              name: question.content,\n              value: accumulatedAnswer / divider\n            });\n          }\n        }\n      });\n    });\n  }\n\n  getProjectsByTeam() {\n    this.projectsByTeam = [];\n    this.projects.forEach((project) => {\n      this.teams.forEach((team) => {\n        project.billingDate = moment(project.billingDate);\n        if (\n          team.selected === true &&\n          project.teamLeadId === team.id\n          &&\n          project.billingDate <= moment(this.teamEndDate) &&\n          project.billingDate >= moment(this.teamStartDate)\n        ) {\n          this.projectsByTeam.push(project);\n        }\n      })\n    });\n  }\n\n  getProjectsByProjectManager() {\n    this.projectsByProjectManager = [];\n    this.projects.forEach((project) => {\n      this.projectManagers.forEach((pm) => {\n        project.billingDate = moment(project.billingDate);\n        if (\n          pm.selected === true &&\n          project.projectManagerId === pm.id &&\n          project.billingDate <= moment(this.projectManagerEndDate) &&\n          project.billingDate >= moment(this.projectManagerStartDate)\n        ) {\n          this.projectsByProjectManager.push(project);\n        }\n      })\n    });\n  }\n\n  getProjects() {\n    this.projectStore.getProjects()\n        .subscribe((projects: Project[]) => {\n          this.projects = projects;\n        });\n  }\n\n  getQuestions() {\n    this.questions = [];\n    this.questionStore.getQuestions()\n        .subscribe((questions: Question[]) => {\n          questions.forEach((question) => {\n            this.questions.push(question);\n          });\n        });\n  }\n\n  getAnswersByTeam() {\n    this.answerStore.getAnswers()\n        .subscribe((answers: Answer[]) => {\n          this.answersByTeam = answers.filter(answer => _.findIndex(this.projectsByTeam, {id: answer.project_id + ''}) !== -1);\n        });\n  }\n\n  getAnswersByProjectManager() {\n    this.answerStore.getAnswers()\n        .subscribe((answers: Answer[]) => {\n          this.answersByProjectManager = answers.filter(answer => _.findIndex(this.projectsByProjectManager, {id: answer.project_id + ''}) !== -1);\n        });\n  }\n\n  loadTeams() {\n    this.teams = this.projects.reduce((acc, project: Project) => {\n      const {teamLeadId} = project;\n      if (_.findIndex(acc, {id: teamLeadId}) === -1 && teamLeadId !== null) {\n        const user = _.find(this.users, {id: teamLeadId});\n        user['selected'] = true;\n        acc.push(user);\n      }\n      return acc;\n    }, []);\n  }\n\n  loadProjectManagers() {\n    this.projectManagers = this.projects.reduce((acc, project: Project) => {\n      const {projectManagerId} = project;\n      if (_.findIndex(acc, {id: projectManagerId}) === -1 && projectManagerId !== null) {\n        const user = _.find(this.users, {id: projectManagerId});\n        user['selected'] = true;\n        acc.push(user);\n      }\n      return acc;\n    }, []);\n  }\n\n  getUsers() {\n    this.userStore.getUsers()\n        .subscribe((users: User[]) => {\n          this.users = users;\n        });\n  }\n\n  generateAnswer() {\n    const answer = {\n      'content': this.answer_content,\n      'project_id': this.answer_project_id,\n      'question_id': this.answer_question_id,\n      'user_id': 1\n    };\n    alert(this.answerService.postAnswer(answer) + 'sent');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ffufm-feedback-dashboard-features/overview/overview.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '@app/shared';\nimport { OverviewRouting } from '@app/ffufm-feedback-dashboard-features/overview/overview.routing';\nimport { OverviewComponent } from '@app/ffufm-feedback-dashboard-features/overview/overview.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    OverviewRouting,\n    FormsModule\n  ],\n  declarations: [\n    OverviewComponent\n  ]\n})\nexport class OverviewModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ffufm-feedback-dashboard-features/overview/overview.module.ts","import { RouterModule, Routes } from '@angular/router';\nimport { OverviewComponent } from '@app/ffufm-feedback-dashboard-features/overview/overview.component';\nimport { NgModule } from '@angular/core';\n\nconst overviewRoutes: Routes = [\n  {\n    path: '',\n    component: OverviewComponent\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(overviewRoutes)\n  ],\n  exports: [RouterModule]\n})\n\nexport class OverviewRouting {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/ffufm-feedback-dashboard-features/overview/overview.routing.ts"],"sourceRoot":"webpack:///"}